#NEXUS

[!Rauhut, O. W. M., Remes, K., Fechner, R., Cladera, G. and Puerta, P., 2005. Discovery of a short-necked sauropod dinosaur from the Late Jurassic period of Patagonia. Nature, 435, 670-672.]

BEGIN DATA;
	DIMENSIONS  NTAX=27 NCHAR=154;
	FORMAT SYMBOLS= " 0 1 2 3 4 5 6 7 8 #" MISSING=? GAP=9 ;
MATRIX

Shunosaurus           0000000000000000000??00000000000000?000000?0000000?000001000000000100000990000100000000?0000000000000000?009?00000000000000000000000000000000?000000000000
Amargasaurus          ?????????0????000101?1101?????111011?1???????????????0010110?100001010110130011???00000?1110??????????????????0???????0?1?000000?????????0?????0?0???????0
Amazonsaurus          ?????????????????????????????????????????????????????0?????????????????????11??????0?01?0??????11111???0?00?????100??????????????????????10???????????????
Amphicoelias          ?????????????????????????????????????01????0???????????????????????????????11000110000000???????????????????1?????????????????????????????0????000????????
Apatosaurus           0111110010?1111100011?1001001001000001?????1121111???01121111100010000111031000111000000011100011111111000111000010110011000000011100011101000000000111100
Barosaurus            ?????????????????????????????????????????????????????01??1?1?1010??????110?1000??10000000??11111111111111111??00?10??????0????????????????1??????????????0
Brachiosaurus         101000100010100000010000011001000001100111200010110001101111100100000??099110000110100100100000001100000001?011??001101010000100111111001101011100011100?0
Brachytrachelopan     ?????????????????????????????????????????????????????00??100??0001111101?11001111100000?1?1?????????????????101?????????????????????????10??????00????????
Camarasaurus          10100010001011000001001000110100000010011110000011000010011111000000001100110000010100100100000001110000001000?0100100101000010011111011100101100000110000
Cetiosauriscus        ???????????????????????????????????????????????????????????????????????????0????0???0?(01)0?(01)??10100000(01)1?00001???0010??0(01)?1?00010??????????0?????01??????1??
Dicraeosaurus         0111????11????00010111101??1?0111010111????1121111?0000101001100001110011110011101000000111100010111100000111000?10100001?00010?????????10100000000011?1?0
Dinheirosaurus        ??????????????????????????????????????????????????????1????1??0??????101???100011?(01)000000?????????????????????????????????????????????????????????????????
Diplodocus            011111001011111100011010010010010000111100?1121111110011211111010100010110310001110000000111111111111111111110000101100010000100????????1010000001001101?0
Euhelopus             1000?0??10??10??0?????????0??1????????011??0?0001101011?20??000100000011190100001?11011?020?????????????????011????110010?100???????????110001110000110000
Haplocanthosaurus     ????????????????0?????????????????0??????????????????01??1111000000000009901001001010000010000000110000000??100??00000001???????????????1000011000???????0
higher_titanosaurs    0019001011101000000000100012010001011001102001111100011020001001000000109921000000110111020310000111000010110111901111010110111191111109110111110110111011
Jobaria               1010001000100?0000010000001?0?0??000?00????000000000001?01111000000020?099101000110100000100000001100000000?0000?101001010000100011000111000011000001100?0
Limaysaurus           ???????1?0??1?0010111091901???01010111?????????11???101??1111000000010?099?10?10?100000?1??00000011100000011?????0?11020?1010100??????????000110?00?1??0?0
Losillasaurus         ???????????????????????????????00?????????????????????1??100100??1?02??099?10?1?10?11?00???110?00000100?0????????1???????0000??1?????????00???????????????
Malawisaurus          10???0???0????????????????????????????0????0???0110?010??00?10010?000??099??00?00??101110???10?001100000101?01?1901??????1100010?1??110?????1111??10?????1
Mamenchisaurus        100900110000100000000000001?010????0??000010000000000100211000111100200100110000010010000101100000000000?00?0000010110???0000100101?001??00?0100000101?0?0
Nigersaurus           011??0011?????001011??919?1???01?00??1010??11111101010???1??10?00??????09???????????????????????????????????100????11020??????????????????????????????????
Omeisaurus            1000000000000000000100000???01?0?0?0?0000??0000001?00010211100111?0020009911000?010000100100100000000000?00?00?001010000?000000000000011000001001?0?000100
Rebbachisaurus        ???????????????????????????????????????????????????????????????????????09???011?110000011??????????????????????????110201??1????????????????011??????????0
Suuwassea             ?1?????0?????????0??11100?0???0?0??10??????1??1?1?0?0011?11?1000?1000??101???0???????????????0?????????????010?????100001??01?????????????????????????011?
Tehuelchesaurus       ?????????????????????????????????????????????????????1?????????????????099?11?01111?0010?????????????????????01????110?11?000100??????????01011100????????
Tornieria             ??????????????01??001?101???????00000??????????????????????????1????????????????????????????11?11??1?10110?????????111001000010??????????0??0000010111????
;
END;

BEGIN ASSUMPTIONS;
	OPTIONS  DEFTYPE=unord PolyTcount=MAXSTEPS ;
	TYPESET * UNTITLED  = unord: 1-56 58-74 76-89 91-154, ord: 57 75 90;
END;

BEGIN TREES;

	Translate
		1 Shunosaurus,
		2 Amargasaurus,
		3 Amazonsaurus,
		4 Amphicoelias,
		5 Apatosaurus,
		6 Barosaurus,
		7 Brachiosaurus,
		8 Brachytrachelopan,
		9 Camarasaurus,
		10 Cetiosauriscus,
		11 Dicraeosaurus,
		12 Dinheirosaurus,
		13 Diplodocus,
		14 Euhelopus,
		15 Haplocanthosaurus,
		16 higher_titanosaurs,
		17 Jobaria,
		18 Limaysaurus,
		19 Losillasaurus,
		20 Malawisaurus,
		21 Mamenchisaurus,
		22 Nigersaurus,
		23 Omeisaurus,
		24 Rebbachisaurus,
		25 Suuwassea,
		26 Tehuelchesaurus,
		27 Tornieria
		;
tree MPT_1 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_2 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_3 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_4 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_5 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_6 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_7 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_8 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_9 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_10 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_11 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_12 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_13 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_14 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_15 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_16 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_17 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_18 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_19 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_20 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_21 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_22 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_23 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_24 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_25 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_26 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_27 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_28 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_29 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_30 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_31 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_32 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_33 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_34 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_35 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_36 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_37 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_38 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_39 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_40 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_41 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_42 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_43 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_44 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_45 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_46 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_47 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_48 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_49 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_50 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_51 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),27),12)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_52 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_53 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_54 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_55 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_56 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_57 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_58 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_59 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_60 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_61 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_62 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_63 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_64 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_65 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_66 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_67 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_68 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_69 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_70 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_71 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_72 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_73 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),(((10,23),21),19)));
tree MPT_74 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_75 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_76 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_77 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_78 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_79 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_80 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_81 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_82 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),(18,(22,24))),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_83 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_84 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_85 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_86 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_87 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_88 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_89 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_90 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_91 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_92 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_93 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_94 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_95 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),(((10,23),21),19)));
tree MPT_96 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),27),12))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_97 = [&R] (1,((((((((2,(8,11)),((5,((6,(12,13)),27)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_98 = [&R] (1,((((((((2,(8,11)),((5,((6,12,13),27)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_99 = [&R] (1,((((((((2,(8,11)),((5,((6,13),(12,27))),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_100 = [&R] (1,((((((((2,(8,11)),((5,(((6,13),12),27)),25)),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_101 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_102 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_103 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_104 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),(18,(22,24))),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_105 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_106 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_107 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_108 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,22),24)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_109 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_110 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_111 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_112 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,24),22)),4),((3,(7,((14,(16,20)),26))),9)),17),15),((10,23),(19,21))));
tree MPT_113 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_114 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_115 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_116 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,24),22)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_117 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,(12,13)),27))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_118 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,13),(12,27)))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_119 = [&R] (1,(((((((((2,(8,11)),25),(5,(((6,13),12),27))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
tree MPT_120 = [&R] (1,(((((((((2,(8,11)),25),(5,((6,12,13),27))),((18,22),24)),4),((((3,26),(14,(16,20))),7),9)),17),15),((10,23),(19,21))));
END;

